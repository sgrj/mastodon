- content_for :page_title do
  = t('auth.register')

- content_for :header_tags do
  = render partial: 'shared/og', locals: { description: description_for_sign_up }

.academy-introduction
  %h1.title ActivityPub.Academy
  %p.subtitle Explore the ActivityPub protocol interactively


  %p ActivityPub.Academy is a learning resource for <a href="https://www.w3.org/TR/activitypub/">ActivityPub</a>. The protocol is brought to life by showing Activities sent between different instances in real time!

  %p Sign up for a fully functioning Mastodon account (accounts are deleted after one day, but you can always create a new one). Follow other accounts, create posts, boost &amp; like, and see the effects on the protocol visualized.

  %p Learn more on my <a href="//seb.jambor.dev">blog</a>.

  = simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { novalidate: false }) do |f|

    = render 'shared/error_messages', object: resource

    .fields-group
      = f.input :confirm_password, as: :string, placeholder: t('simple_form.labels.defaults.honeypot', label: t('simple_form.labels.defaults.password')), required: false, input_html: { 'aria-label' => t('simple_form.labels.defaults.honeypot', label: t('simple_form.labels.defaults.password')), :autocomplete => 'off' }, hint: false
      = f.input :website, as: :url, wrapper: :with_label, label: t('simple_form.labels.defaults.honeypot', label: 'Website'), required: false, input_html: { 'aria-label' => t('simple_form.labels.defaults.honeypot', label: 'Website'), :autocomplete => 'off' }

    = hidden_field_tag :accept, params[:accept]
    = f.input :invite_code, as: :hidden

    .fields-group
      = f.input :agreement, as: :boolean, wrapper: :with_label, label: t('auth.privacy_policy_agreement_html', rules_path: about_more_path, privacy_policy_path: privacy_policy_path), required: true

    .actions
      = f.button :button, @invite.present? ? t('auth.register') : sign_up_message, type: :submit

= image_tag asset_pack_path('media/images/academy-mascot.webp'), alt: 'The Mastodon mascot wearing a university gown', class: 'mascot'
